; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --split_sections --debug -c -S -ouacpymark\uacpy.s --depend=uacpymark\uacpy.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Drivers/CMSIS/Include -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -ID:\works\stm3210e-lk\uacpymark\MDK-ARM\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=517 -D_RTE_ -DSTM32F10X_HD -DUSE_HAL_DRIVER -DSTM32F103xE --omf_browse=uacpymark\uacpy.crf ..\Src\uacpy.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.uacpy||, CODE, READONLY, ALIGN=1

uacpy PROC
	PUSH	{R4, R5, R6, R7, LR}	

; R1 must greater than R0 :(	
; R2 must greater than 0  8-|

	SUB	R1, R1, R0
	ADD	R2, R0, R1

; void __uacpy(void *dst, unsigned int seek, unsigned int limit)
__uacpy
	AND	R4, R0, #3
	CMP	R4, #2
; 1
	LDRLTB	R3, [R0, R1]
	STRLTB	R3, [R0]
	ADDLT	R0, #1
; 1, 2
	LDRLEH	R3, [R0, R1]
	STRLEH	R3, [R0]
	ADDLE	R0, #2
;3
	LDRGTB	R3, [R0, R1]
	STRGTB	R3, [R0]
	ADDGT	R0, #1

	TST	R0, #3
__bug0
	BNE	__bug0		; bug or wrong usage?

	TST	R2, #3
	BEQ	wordcpy		; R0, R0+R1 aligned, R2 don't know


__AUcpy3
	AND	R6, R1, #3	;R0 已经对齐了
	BIC	R1, #3

	LSL	R6, #3
	MOV	R7, #32
	SUB	R7, R7, R6

	LDR	R5, [R0]
	LSL	R5, R5, R6
	LSR	R5, R5, R6
__AUcpy4
	LDR	R3, [R0, R1]
	LSR	R4, R3, R7
	ORR	R4, R5
	STR	R4, [R0]
	LSL	R5, R3, R6
	
	ADD	R0, #4
	CMP	R0, R2
	BLT	__AUcpy4	; need some more to copy?

	SUB	R4, R2, R0
	CBZ	R4, __done

__overwrite3			; FIXME: 1 to 3 bytes more copied
	LDR	R3, [R0, R1]
	LSR	R4, R3, R7
	ORR	R4, R5
	STR	R4, [R0]
	LSL	R5, R3, R6	
__done

        POP	{R4, R5, R6, R7, LR}

wordcpy3
	SUBS	R4, R2, R0
	AND	R4, #3
	BIC	R3, #3

	LDR	R3, [R0, R1]
	STR	R3, [R0]
	ADD	R0, #4
	CMP	R0, R2
	BLT	wordcpy
	CBZ	R4, __done

	CMP	#R4, #2
	LDR	R3, [R0]
	LDR	R4, [R0, R1]
	BFILT	R4, R3, #0, #4
	BFIEQ	R4, R3, #0, #8
	BFIGT	R4, R3, #0, #12
	STR	R4, [R0]

__done
        POP	{R0, R4, R5, R6, R7, LR}


lz4data
	INCBIN	memory-barriers.txt.lz4
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT uacpy [CODE]
	EXPORT lz4data [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
